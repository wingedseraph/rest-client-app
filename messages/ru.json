{
  "metadata": {
    "title": "REST Клиент",
    "description": "Приложение REST-клиент для образовательных целей RS School"
  },
  "Home": {
    "signIn": "/войти",
    "signUp": "/зарегистрироваться",
    "client": "/клиент",
    "variables": "/переменные",
    "history": "/история",
    "project": "Наш проект — это минималистичный REST-клиент, вдохновлённый Postman. Он позволяет пользователям легко отправлять HTTP-запросы с поддержкой различных методов (GET, POST, PUT и т.д.), пользовательских URL, заголовков и тел запросов в формате JSON или form-data. Ключевые функции включают просмотр ответов в реальном времени со статус-кодами и форматированием, автоматическую генерацию кода для cURL, JavaScript или Python и так далее, историю недавних запросов для быстрого доступа и переменные окружения для динамической замены данных.",
    "course": "Проект создан в рамках комплексного курса по React, который провёл нас от нуля до героя. Мы начали с основ — компоненты, пропсы, состояние — и перешли к сложным темам: хуки (useState, useEffect, кастомные хуки), маршрутизация с Next.js, синхронное управление состоянием с Context или Redux & Zustand, асинхронный менеджер состояния с RTK Query & Tanstack Query, интеграция с Firebase API и интернационализация с next-intl. Курс охватил лучшие практики для создания масштабируемых интерфейсов, тестирование с Vitest & Jest и деплой на Netlify & Vercel — полный путь от базовых концепций до готовых к продакшену приложений.",
    "developers": "Проект разработала талантливая команда из трёх человек: <underline>Николай</underline>, ведущий фронтенд-разработчик, отвечавший за React-компоненты и дизайн UI/UX; <underline>Диана</underline>, специалист по бэкенду, фокусировавшаяся на взаимодействии с Firebase API и хранении данных; и <underline>Алексей</underline>, full-stack интегратор, который связал всё воедино с помощью Next.js и TypeScript.  Вместе мы сотрудничали через GitHub, итеративно дорабатывая на основе отзывов, чтобы создать потрясающий инструмент."
  },
  "About": {
    "title": "Об этом приложении",
    "description": "Это приложение является демонстрационным REST-клиентом, созданным с помощью Next. Оно позволяет отправлять HTTP-запросы, изучать API и проверять ответы, подобно таким инструментам, как Postman",
    "back": "Вернуться на главную страницу"
  },
  "NotFound": {
    "title": "404 — Страница не найдена",
    "description": "Извините, страница, которую вы ищете, не существует.",
    "back": "Вернуться на главную"
  },
  "Header": {
    "home": "Домой",
    "about": "О нас",
    "signIn": "Войти",
    "signUp": "Зарегистрироваться",
    "logout": "Выйти"
  },
  "Footer": {
    "client": "/клиент",
    "variables": "/переменные",
    "history": "/история"
  },
  "Search": {
    "button": "Поиск",
    "placeholder": "Введите ссылку"
  },
  "ErrorBoundary": {
    "title": "Что-то пошло не так",
    "retry-button": "Попробовать еще раз"
  },
  "LocaleSwitcher": {
    "label": "Поменять язык",
    "switchLocale": "{locale, select, ru {Русский} en {Английский} other {Неизвестно}}"
  },
  "Variables": {
    "header": "Переменные",
    "delete-variable": "Удалить",
    "add-variable": "Добавить",
    "add-new-variable": "Добавить новую переменную",
    "error": "Переменная уже существует"
  },
  "RequestForm": {
    "method": "Метод",
    "url": "URL",
    "headers": "Заголовки",
    "body": "Тело",
    "send": "Отправить запрос",
    "response": "Ответ",
    "button": {
      "request": "Запрос",
      "request-loading": "Запрос...",
      "remove": "Удалить",
      "addHeader": "Добавить заголовок",
      "prettifyJson": "Форматировать JSON"
    },
    "label": {
      "requestBody": "Тело запроса"
    },
    "status": {
      "status": "Статус",
      "statusText": "Текст статуса",
      "responseTime": "Время ответа"
    },
    "error": {
      "wrongHeader": "Неверный ключ или значение заголовка",
      "wrongBody": "Неверный JSON",
      "requestUnknown": "Неизвестно"
    }
  },
  "Codegen": {
    "generate": "Сгенерировать новый код",
    "generating": "Генерация...",
    "no-generated-code": "Выберите язык и нажмите сгенерировать",
    "no-url-generate": "URL обязателен"
  },
  "FormDataAndErrors": {
    "email-required": "Почта обязательна",
    "email-invalid": "Невалидный тип почты",
    "password-required": "Пароль обязателен",
    "password-too-short": "Пароль должен содержать более 8 символов",
    "password-uppercase": "Пароль должен содержать минимум 1 букву в верхнем регистре",
    "password-number": "Пароль должен содержать минимум 1 цифру",
    "name-length": "Имя должно содержать более 3 букв",
    "create-account": "Создайте аккаунт",
    "or": "или",
    "log-in": "Войти",
    "password": "Пароль",
    "insert-name": "Введите имя",
    "insert-password": "Введите пароль",
    "register": {
      "name": "Имя",
      "register": "Зарегистрироваться"
    }
  },
  "FirebaseErrors": {
    "auth/user-not-found": "Пользователь с такой почтой не найден",
    "auth/email-already-in-use": "Пользователь с такой почтой уже существует",
    "auth/wrong-password": "Неверный пароль",
    "auth/invalid-email": "Неверная почта",
    "auth/invalid-credential": "Неверные учетные данные",
    "auth/too-many-requests": "Слишком много попыток. Попробуйте позже",
    "auth/user-disabled": "Аккаунт заблокирован",
    "unknown": "Неизвестная ошибка"
  },
  "History": {
    "title": "История запросов",
    "noRequests": "В вашей истории не найдено запросов.",
    "url": "URL",
    "body": "Body",
    "time": "Время",
    "duration": "Длительность",
    "size": "Размер",
    "error": "Ошибка загрузки истории запросов. Попробуйте позже. Ошибка:"
  }
}
